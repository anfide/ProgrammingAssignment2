ls
w
library(datasets)
?irir
?iris
head(iris)
iris[iris$Species == "virginica"]
iris[iris$Species == "virginica"]
iris[iris$Species == "virginica",]
iris[iris$Species == "virginica", "Sepal.length"]
iris[iris$Species == "virginica", "Sepal.Length"]
mean(iris[iris$Species == "virginica", "Sepal.Length"])
head(iris)
iris[1:4]
colMeans(iris)
apply(iris[, 1:4], 2, mean)
?traceback
?debug
?trace
?lm
?debug
?cat
x
y
z
i
e
math.e
math
c
a
b
c
d
e
f
g
pi
math.e
exp(1)
pi^2
debug(lm)
y
x
lm(y-x)
y
x
z
undebug(lm)
lm
lm(y-x)
?recover
z <- numeric()
class(z)
length(z)
?set
?get
?NULL
?<<-
?:
?":"
?"<<-"
?"<-"
?"<z-"
?"<<-"
pippo <- function() x
pippo()
x
x = 3
pippo()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(c(3,2))
set
lll <- makeVector(c(3,2))
lll
lll$set
lll$get()
lll$set()
lll$set(c(1,2,3,4))
lll$getmean()
lll$setmean()
lll$setmean(mean(lll$get()))
lll$getmean()
x
lll$get()
m
lll$getmean()
setwd("D:/gitrepo/ProgrammingAssignment2/ProgrammingAssignment2")
inverse
i
?solve
source("cachematrix.R")
m = matrix(1:9, nrow=3, ncol=3)
m
makeCacheMatrix(m)
v <- makeCacheMatrix(m)
cacheSolve(v)
solve(m)
m
det(m)
?det
eigen(m)
m*m
det(m*m)
m <- m*m
v <- makeCacheMatrix(m)
cacheSolve(v)
cacheSolve(v)
cacheSolve(v)
cacheSolve(v)
cacheSolve(v)
cacheSolve(v)
cacheSolve(v)
cacheSolve(v)
cacheSolve(v)
solve(m)
summary(m)
str(m)
str(str)
x <- rnorm(100,2,4)
str(x)
summary(x)
f <- gl(40,10)
f
str(f)
summary(f)
library(datasets)
head(airquality)
str(airquality)
m <- matrix(rnorm(100), 10, 10)
m
str(m)
s <- split(airquality, airquality$Month)
s
length(s)
?split
s[5]
s["5"]
length(s)
str(s)
s$6
s$"6"
?dnorm
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- .5 + 2*x + e
y
summary(y)
plot(x, y)
set.seed(10)
x <- rbinom(100,1,.5)
e <- rnorm(100,0,2)
y <- .5 + 2*x + e
summary(y)
plot(x,y)
x
?rbinom
?outer
